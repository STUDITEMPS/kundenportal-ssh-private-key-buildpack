#!/usr/bin/env bash

function indent() {
	c='s/^/       /'
	case $(uname) in
		Darwin) sed -l "$c";;
		*)      sed -u "$c";;
	esac
}

ENV_DIR=${3:-}
kundenportal_frontend_ssh_private_key="$(cat $ENV_DIR/KUNDENPORTAL_FRONTEND_SSH_PRIVATE_KEY)"
kundenverwaltung_auth_client_ssh_private_key="$(cat $ENV_DIR/KUNDENVERWALTUNG_AUTH_CLIENT_SSH_PRIVATE_KEY)"

if [ "$kundenportal_frontend_ssh_private_key" != "" ] && [ "$kundenverwaltung_auth_client_ssh_private_key" != "" ]; then
	echo "-----> Running SSH private key setup"

	# The .ssh needs to be located in the home directory which is different to the
	# home directory of the built machine. The symlink resolves the issue.
	mkdir "$1/.ssh"
	ln -s "$1/.ssh" "$HOME/.ssh"
	echo "$kundenportal_frontend_ssh_private_key" | base64 --decode > "$HOME/.ssh/kundenportal_frontend"
	echo "$kundenverwaltung_auth_client_ssh_private_key" | base64 --decode > "$HOME/.ssh/kundenverwaltung_auth_client"

	chmod 0700 "$HOME/.ssh"
	chmod 0600 "$HOME/.ssh/kundenportal_frontend"
	chmod 0600 "$HOME/.ssh/kundenverwaltung_auth_client"

	echo "
	Host ssh.kundenportal_frontend.github.com
		StrictHostKeyChecking no
		Hostname github.com
	  User git
	  IdentityFile ~/.ssh/kundenportal_frontend
	  IdentitiesOnly yes

	Host ssh.kundenverwaltung_auth_client.github.com
		StrictHostKeyChecking no
	  Hostname github.com
	  User git
	  IdentityFile ~/.ssh/kundenverwaltung_auth_client
	  IdentitiesOnly yes
	" > "$HOME/.ssh/config"

	# git config url."ssh://git@kundenportal_frontend.github.com/STUDITEMPS/kundenportal_frontend.git".insteadOf "ssh://git@github.com:STUDITEMPS/kundenportal_frontend.git"
	# git config url."ssh://git@kundenverwaltung_auth_client.github.com/STUDITEMPS/kundenverwaltung_auth_client.git".insteadOf "ssh://git@github.com:STUDITEMPS/kundenverwaltung_auth_client.git"

	git config url."git@ssh.kundenportal_frontend.github.com:STUDITEMPS/kundenportal_frontend.git".insteadOf "git@github.com:STUDITEMPS/kundenportal_frontend.git"
	git config url."git@ssh.kundenverwaltung_auth_client.github.com:STUDITEMPS/kundenverwaltung_auth_client.git".insteadOf "git@github.com:STUDITEMPS/kundenverwaltung_auth_client.git"
else
	echo "-----> Not all SSH private keys were provided"
fi

echo "TESTING REPO ACCESS WITH LS-REMOTE: "
git ls-remote git@github.com:STUDITEMPS/kundenportal_frontend.git
git ls-remote git@github.com:STUDITEMPS/kundenverwaltung_auth_client.git

echo "TESTING REPO ACCESS WITH CLONE: "
# git clone git@github.com:STUDITEMPS/kundenportal_frontend.git
# git clone git@github.com:STUDITEMPS/kundenverwaltung_auth_client.git

git clone git@ssh.kundenportal_frontend.github.com:STUDITEMPS/kundenportal_frontend.git
git clone git@ssh.kundenverwaltung_auth_client.github.com:STUDITEMPS/kundenverwaltung_auth_client.git
